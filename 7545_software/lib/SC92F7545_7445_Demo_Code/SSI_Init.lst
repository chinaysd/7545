C51 COMPILER V9.59.0.0   SSI_INIT                                                          03/30/2019 11:18:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SSI_INIT
OBJECT MODULE PLACED IN SSI_Init.obj
COMPILER INVOKED BY: E:\MDK\C51\BIN\C51.EXE c\SSI_Init.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\SSI_Init.ls
                    -t) TABS(7) OBJECT(SSI_Init.obj)

line level    source

   1          #include "H/Function_Init.H"
   2          
   3          //选择三合一模式：
   4          #define  Uart1  0
   5          #define  TWI    1
   6          #define  SPI    2
   7          
   8          #define  SSI_Mode  TWI//Uart1
   9          
  10          void Uart1_Init(uint Freq,unsigned long int baud);
  11          void TWI_Init(void);
  12          void SPI_Init(void);
  13          
  14          bit Uart1SendFlag = 0;    //Uart发送中断标志位
  15          bit Uart1ReceiveFlag = 0; //Uart接收中断标志位
  16          bit SPIFlag = 0;         //SPI数据传输完成标志位
  17          bit TWIFlag = 0;         //中断标志位
  18          /*****************************************************
  19          *函数名称：void SSI_Test(void)
  20          *函数功能：SSI测试
  21          *入口参数：void
  22          *出口参数：void
  23          *****************************************************/
  24          void SSI_Test(void)
  25          {
  26   1      #if (SSI_Mode == Uart1)
                     Uart1_Init(16,9600);
                     while(1)
                     {
                            SSDAT = 0xAA;
                            while(!Uart1SendFlag);
                            Uart1SendFlag = 0;
                     }
              #endif
  35   1             
  36   1      #if (SSI_Mode == TWI)
  37   1             TWI_Init();
  38   1             while(1)
  39   1             {
  40   2                    if(SSDAT == 0x57)
  41   2                    {
  42   3                          while(1); 
  43   3                    }                     
  44   2             }
  45   1      #endif
  46   1      
  47   1      #if (SSI_Mode == SPI)
                     SPI_Init();
                     while(1)
                     {
                            SSDAT = 0xAA;
                            while(!SPIFlag);
                            SPIFlag = 0;
                     }
C51 COMPILER V9.59.0.0   SSI_INIT                                                          03/30/2019 11:18:09 PAGE 2   

              #endif 
  56   1      }
  57          /*****************************************************
  58          *函数名称：void Uart1_Init(uint Freq,unsigned long int baud)
  59          *函数功能：Uart1中断初始化
  60          *入口参数：Freq-主频，baud-波特率
  61          *出口参数：void
  62          *****************************************************/
  63          void Uart1_Init(uint Freq,unsigned long int baud)
  64          {
  65   1             P1CON &= 0xF5;   //TX/RX设置为输入带上拉
  66   1             P1PH  |= 0x0A;
  67   1             
  68   1             OTCON |= 0xC0;    //串行接口SSI选择Uart1通信
  69   1             SSCON0 = 0x50;   //设置通信方式为模式一，允许接收
  70   1             SSCON1 = Freq*1000000/baud;   //波特率低位控制
  71   1             SSCON2 = (Freq*1000000/baud)>>8;   //波特率高位控制
  72   1             IE1 |= 0x01;      //开启SSI中断
  73   1          EA = 1;   
  74   1      }
  75          
  76          /*****************************************************
  77          *函数名称：void TWI_Init(void)
  78          *函数功能：TWI初始化
  79          *入口参数：void
  80          *出口参数：void
  81          *****************************************************/
  82          void TWI_Init(void)
  83          {
  84   1             #if 0
                     OTCON |= 0x80;  //选择TWI模式
                     SSCON0 = 0x80;  // ---- x---  0为不允许接收，1为允许接收
                     SSCON1 = 0x01;  //xxxx xxxy  x为地址寄存器，y为0禁止/1允许通用地址响应
                     IE1 |= 0x01;
                     EA = 1;
                     #else
  91   1             OTCON = 0x80;
  92   1             SSCON1 = 0x52;
  93   1             SSCON0 = 0x88;
  94   1             IE1 |=0x01;
  95   1             EA = 1;
  96   1             #endif
  97   1      }
  98          
  99          /*****************************************************
 100          *函数名称：void SPI_Init(void)
 101          *函数功能：SPI初始化
 102          *入口参数：void
 103          *出口参数：void
 104          *****************************************************/
 105          void SPI_Init(void)
 106          {
 107   1             OTCON |= 0X40;  //选择SPI模式
 108   1             SSCON0 = 0x2F; //设置SPI为主设备，SCK空闲时间为低电平，SCK周期第二沿采集数据，时钟速率为Fsys/512
 109   1             SSCON1 = 0x01;   //允许发送中断
 110   1             SSCON0 |= 0x80; //开启SPI
 111   1             IE1 |= 0x01;
 112   1             EA = 1;
 113   1      }
 114          
 115          
 116          /*****************************************************
C51 COMPILER V9.59.0.0   SSI_INIT                                                          03/30/2019 11:18:09 PAGE 3   

 117          *函数名称：void TWI/SPI/UART1_Int() interrupt 7
 118          *函数功能：SSI中断函数
 119          *入口参数：void
 120          *出口参数：void
 121          *****************************************************/
 122          #if (SSI_Mode == Uart1)
              void Uart1_Int() interrupt 7   //Uart1中断函数
              {
                     if(SSCON0&0x02)    //发送标志位判断
                     {
                            SSCON0 &= 0xFD;
                            Uart1SendFlag = 1;
                     }
                     if((SSCON0&0x01))  //接收标志位判断
                     {
                            SSCON0 &= 0xFE;
                            Uart1ReceiveFlag = 1;
                     }      
              }
              #endif
 137          
 138          #if (SSI_Mode == TWI)
 139          void TWI_Int() interrupt 7     //TWI中断函数
 140          {
 141   1             if(SSCON0&0x40)
 142   1             {
 143   2                    SSCON0 &= 0xbf;  //中断清零
 144   2                    TWIFlag = 1;
 145   2             }      
 146   1      }
 147          #endif 
 148          
 149          #if (SSI_Mode == SPI)
              void SpiInt(void) interrupt 7    //SPI中断函数
              {        
                     if(SSCON1&0X08)    //发送缓存器空标志判断
                     {
                            SSCON1 &= ~0X08;
                     }
                     if(SSCON1&0X80)    //数据传输标志位判断
                     {
                            SSCON1 &= ~0X80;
                            SPIFlag = 1;
                     }
              }
              #endif 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
