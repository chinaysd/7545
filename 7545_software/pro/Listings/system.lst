C51 COMPILER V9.59.0.0   SYSTEM                                                            03/30/2019 14:27:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\Objects\system.obj
COMPILER INVOKED BY: E:\MDK\C51\BIN\C51.EXE ..\user\system.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\bsp;..\lib;..\user) DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\system.lst) TABS(7) OBJECT(.\Objects\system.obj)

line level    source

   1          #include "system.h"
   2          #include "string.h"
   3          
   4          
   5          TIMEOUT_PARA TimeOut_Para[2];
   6          
   7          unsigned int Temp_Data;
   8          unsigned int UART1_Temp_Data;
   9          extern unsigned char Rev_String[REV_BUF_SIZE];
  10          extern unsigned char Uart1_Send_String[UART1_REV_BUF_SIZE];
  11          extern unsigned char UartSendFlag,UartReceiveFlag;
  12          extern unsigned char Uart1SendFlag,Uart1ReceiveFlag;
  13          
  14           int xdata PWMRD_41  _at_  0x742;
  15           int xdata PWMRD_42  _at_  0x744;
  16           int xdata PWMRD_43  _at_  0x746;
  17          
  18           int xdata PWMRD_Temp;
  19          unsigned char PWMRD_41_Flag;
  20          unsigned char i;
  21          
  22          
  23          void Pwm_Init(void)
  24          {
  25   1             //设置了周期为200us，占空比为50%的PWM波形
  26   1             PWMCON = 0x7F;    //       //周期设置低8位,200us
  27   1             PWMCFG = 0x8C;  //         //7:开关  5-4：时钟源选择  3-0：周期设置高4位     
  28   1             PWMRD_Temp = 0x8000 | 0x640;     //PWM的占空比调节寄存只可写,所以可借用变量PWMRD_temp来读写占空比的值
  29   1             PWMRD_41 = PWMRD_Temp;
  30   1             PWMRD_42 = PWMRD_Temp;
  31   1             PWMRD_43 = PWMRD_Temp;
  32   1      }
  33          
  34          
  35          void System_Init(void)
  36          {
  37   1             OPERCON = 0X01;       //CHKSUM运算
  38   1             TimeOutDet_Init();
  39   1             Led_Init();
  40   1             Timer_Init();
  41   1             Uart1_Init(UART1_Freq,UART1_Baud);
  42   1             Uart0_Init(UART0_Freq,UART0_Baud);
  43   1             //Pwm_Init();
  44   1             simulate_uart_init();
  45   1             Key_Init();
  46   1      }
  47          
  48          
  49          
  50          void System_Handle(void)
  51          {
  52   1             #if 0
                     static unsigned char Temp_Cnts;
                     if(TimeOutDet_Check(&TimeOut_Para[0]))
C51 COMPILER V9.59.0.0   SYSTEM                                                            03/30/2019 14:27:40 PAGE 2   

                     {
                             TimeOut_Record(&TimeOut_Para[0],500);
                             ++ Temp_Cnts;
                             if(Temp_Cnts & 0X01)
                             {
                                   Protocol_Send(0xfa,0xfb,0x01);
                             }
                             else
                             {
                                   Uart1_Protocol_Send(0x55,0x88,0x01);
                             }
                     }
                     if(IF_REV_ALL())
                     {
                            Temp_Data = (unsigned int)Get_32Bit(Rev_String[2],Rev_String[3]);
                            memset(&Rev_String,0,sizeof(Rev_String));
                            switch (Temp_Data)
                            {
                                   case 0x0001:
                                                      LED1_SET(1);
                                                      break;
                                  case 0x0002:
                                                      LED1_SET(0);
                                                      break;
                                  case 0x0004:
                                                      break;
                                  case 0x0008:
                                                      break;
                                  default:
                                              break;
                            }
                     }
                     if(Uart1_IF_REV_ALL())
                     {
                            UART1_Temp_Data = (unsigned int)UART1_Get_32Bit(Uart1_Send_String[2],Uart1_Send_String[3]);
                            memset(&Uart1_Send_String,0,sizeof(Uart1_Send_String));
                            switch(UART1_Temp_Data)
                            {
                                   case 0x0001:
                                                     LED1_SET(1);
                                                     break;
                                  case 0x0002:
                                                     LED1_SET(0);
                                                     break;
                                  case 0x0004:
                                                     break;
                                  case 0x0008:
                                                    break;
                                   default:
                                                    break;
                            }
                     }
                     #endif
 108   1              for(i = 0; i < S_MAX_UART_NUM; i ++){
 109   2      
 110   2             switch(simulate_get_userdata(i))
 111   2             {
 112   3                    case 0x0001:
 113   3                           LED1_SET(1);
 114   3                           break;
 115   3                    case 0x0002:
 116   3                            LED1_SET(0);
C51 COMPILER V9.59.0.0   SYSTEM                                                            03/30/2019 14:27:40 PAGE 3   

 117   3                           break;
 118   3                    case 0x0004:
 119   3                           
 120   3                           break;
 121   3                    case 0x0008:
 122   3                           
 123   3                           break;
 124   3                  default:
 125   3                           break;
 126   3              }
 127   2      
 128   2      
 129   2      
 130   2      
 131   2      
 132   2      
 133   2              }
 134   1      }
 135          
 136          void EX1() interrupt 2
 137          {
 138   1             #if 0
                     static unsigned char Cnts;
                     if(Key_Down())
                     {
                            ++ Cnts;
                            if(Cnts & 0x01)
                            {
                                   LED1_SET(1);
                            }
                            else
                            {
                                   LED1_SET(0);
                            }
                     }
                     #endif
 153   1      }
 154          
 155          /*****************************************************
 156          *函数名称：void UartInt(void) interrupt 4
 157          *函数功能：Uart0中断函数
 158          *入口参数：void
 159          *出口参数：void
 160          *****************************************************/
 161          void UartInt(void) interrupt 4
 162          {
 163   1             #if 1
 164   1             if(TI)
 165   1             {
 166   2                    TI = 0;       
 167   2                    UartSendFlag = 1;           
 168   2             }
 169   1             if(RI)
 170   1             {
 171   2                    RI = 0;       
 172   2                    UartReceiveFlag = 1;
 173   2                    Rev_Data_Handle();          
 174   2             }      
 175   1             #endif
 176   1      }
 177          
 178          void Uart1_Int() interrupt 7   //Uart1中断函数
C51 COMPILER V9.59.0.0   SYSTEM                                                            03/30/2019 14:27:40 PAGE 4   

 179          {
 180   1             if(SSCON0&0x02)    //发送标志位判断
 181   1             {
 182   2                    SSCON0 &= 0xFD;
 183   2                    Uart1SendFlag = 1;
 184   2             }
 185   1             if((SSCON0&0x01))  //接收标志位判断
 186   1             {
 187   2                    SSCON0 &= 0xFE;
 188   2                    Uart1ReceiveFlag = 1;
 189   2                    Uart1_Serial_Handle();
 190   2             }      
 191   1      }
 192          
 193          
 194          
 195          
 196          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    274    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
